// -----------常用的几个函数----------------//
let a = [1, 2, 3, 4]
a.push(5) // 在数组的末尾添加元素 [1,2,3,4,5] 改变原数组
a.pop() // 删除数组最后一个元素 [1,2,3,4] 改变原数组
a.unshift(0) // 在数组头部加入元素 [0,1,2,3,4] 改变原数组
a.shift() // 删除数组的第一个元素 [1,2,3,4] 改变原数组
a.splice(1, 0, 'someItem') // 第一个参数：对数组操作的初始位置；第二个代表要删除的长度；第三个参数选填，如果有的话在初始位置后面加上这个元素 改变原数组
a.slice(0, 2) // 第一个参数：裁剪的初始位置，如果没有默认为0；第二个参数：裁剪的结束位置，如果没有值默认为a的最后一个； 不改变原数组
a.forEach((item, index, array) => {}) // 遍历数字，第一个参数为一个函数，函数参数：item：遍历到的元素，index：数组中正在处理的当前元素的索引， array:forEach() 方法正在操作的数组 不改变原数组
a.map((item, index, array) => {}) // 和forEach基本一致，区别是forEach不改变原数组，map把原数组中的值变为函数中return的值
// -----------Array中的方法----------------//
Array.from(a, (item, index) => {})// a可以为数组或者可转化为数组的伪数组并返回，第二个参数为新转化数组的遍历，并把执行的函数结果返回到每一项中
Array.isArray(a) // 判断a是否为数组，如果是数组返回true，如果不是返回false，注意：Array.isArray(Array.prototype); 为true
// -----------Array.prototype(Array原型中)中的方法----------------//
// -----------Array中的方法和Array原型的方法区别是前者是直接通过Array.xxxx的方式调用，后者是通过一个数组实例调用，如这里定义的a----------------//